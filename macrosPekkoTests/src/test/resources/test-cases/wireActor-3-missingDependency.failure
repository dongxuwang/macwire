import org.apache.pekko.actor.{Actor, ActorSystem}
import com.softwaremill.macwire.pekkosupport._

/**
  * In this example I am constructing simple actor but I don't provide dependency for it.
  * `wire*` will not find it and then not compile.
  */

trait A

class SomeActor(a: A) extends Actor {
  override def receive: Receive = {
    case m => //println(m)
  }
}

//no dependency of type A in scope

val system: ActorSystem = ActorSystem("wireActor-3-missingDependency")
AfterAllTerminate(system)

//no dependency of type A in scope
wireActor[SomeActor]("bob")



